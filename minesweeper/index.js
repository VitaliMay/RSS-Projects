

let mineNumber = 10  // –≤—Å–µ–≥–æ (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ) –º–∏–Ω
let column = 10
let row = 10

let scoreCloseBlock = column*row - mineNumber

const colorNumber = ['one', 'two', 'three', 'foor', 'five', 'six', 'seven', 'eight']


/************************************************************************************************** */
/************************************************************************************************** */

// const mine = {
//   x: 0,
//   y: 0
// }
const mine = {
  x: 0,
  y: 0,
  mineHere: false,
  mineNear: 0,
  mineOpen: false
}

//let matrix = Array(row).fill(Array(column).fill((mine))) // —Å–æ–∑–¥–∞—é —á–∏—Å—Ç—É—é –º–∞—Ç—Ä–∏—Ü—É –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Ö–æ–∂–µ —Å—Å—ã–ª–∞–µ—Ç—Å—è —Å–∞–º–∞ –Ω–∞ —Å–µ–±—è
// –ø—Ä–∏–¥–µ—Ç—Å—è –¥–µ–ª–∞—Ç—å —Ü–∏–∫–ª–æ–º

//let matrix = []

/*
let matrix = new Array(row);
for (let i = 0; i < row; i++) {
  matrix[i] = new Array(column);
  for (let j = 0; j < column; j++) {
    // –Ω–∞–¥–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –∫–∞–∂–¥–æ–π —è—á–µ–π–∫–∏, —Ç.–∫. –∏–Ω–∞—á–µ –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç –∏ X –∏ Y –ø—Ä–∏–º—É—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    // –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å
    matrix[i][j] = {
      x: i,
      y: j,
      mineHere: false,
      mineNear: 0,
      mineOpen: false
    };
    mine.x = i
    mine.y = j
    matrix[i][j] = mine
  }
}
*/
class MineInfo {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.mineHere = false;
    this.mineNear = 0;
    this.mineOpen = false;
  }
}

let matrix = new Array(row);


/******************************************************* */
// —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∏–Ω

const minePlacement = function(){
  /* —Å–æ–∑–¥–∞—é –º–∞—Ç—Ä–∏—Ü—É –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è */
  matrix = null
  matrix = new Array(row); 
  for (let x = 0; x < row; x++) {
    matrix[x] = new Array(column);
    for (let y = 0; y < column; y++) {
      matrix[x][y] = new MineInfo(x, y);
    }
  }

  /* –≥–µ–Ω–µ—Ä–∏—Ä—É—é —Å–ª—É—á–∞–π–Ω—É—é —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É –º–∏–Ω */
  let countMine = mineNumber
  while(countMine){
    let x = Math.floor(Math.random() * row)
    let y = Math.floor(Math.random() * column)
    if(matrix[x][y].mineHere === false){
      matrix[x][y].mineHere = true
      countMine--
    }
  }
}

/********************************************************* */
/************** —Å—á–∏—Ç–∞—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω –≤–æ–∫—Ä—É–≥ —è—á–µ–π–∫–∏ */

const mineAround = function(){
  for (let i = 0; i < matrix.length; i++) {
     for (let k = 0; k < matrix[i].length; k++) {

      if ((i-1) >= 0 && (k-1) >= 0 && matrix[i-1][k-1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i-1) >= 0 && (k) >= 0 && matrix[i-1][k].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i-1) >= 0 && (k + 1) < matrix[i].length && matrix[i-1][k+1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i) >= 0 && (k + 1) < matrix[i].length && matrix[i][k+1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i+1) < matrix.length && (k + 1) < matrix[i].length && matrix[i+1][k+1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i+1) < matrix.length && (k) < matrix[i].length && matrix[i+1][k].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i+1) < matrix.length && (k-1) >= 0 && matrix[i+1][k-1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      if ((i) < matrix.length && (k-1) >= 0 && matrix[i][k-1].mineHere === true) matrix[i][k].mineNear = matrix[i][k].mineNear + 1;
      /* —Ç–µ—Å—Ç */
      //if() matrix[i][k].mineNear = 88;
    }
  }
}

minePlacement()
mineAround()


let razm = 'block'  // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∏–≥—Ä —Å —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–ª—è

if(row === 20) razm = 'block_big'

// cell unit block item elem (—è—á–µ–π–∫–∞ –∫–ª–µ—Ç–∫–∞ –±–ª–æ–∫)

/************************************************************************ */

function start(){
  document.querySelector('body').innerHTML = '' // –æ—á–∏—â–∞—é —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
  document.querySelector('body').innerHTML += `<main class="main"></main>`;
  document.querySelector('.main').innerHTML = `<h1 class="title">Minesweeper</h1>`;
  //document.querySelector('.main').innerHTML += `<div class="wrapper-text"></div>`; // –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
  document.querySelector('.main').innerHTML += `<div class="playboard"></div>`;

  let init = '';

  for (let i = 0; i < row*column; i++){

    mine.x = i % row // –æ–ø—Ä–µ–¥–µ–ª—è—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É X —è—á–µ–π–∫–∏
    mine.y = Math.floor(i/row) //  –æ–ø—Ä–µ–¥–µ–ª—è—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É Y —è—á–µ–π–∫–∏

    let mineJSON = JSON.stringify(mine)  // —ç—Ç–æ —É–∂–µ —Å—Ç—Ä–æ–∫–∞, –ø–æ—ç—Ç–æ–º—É –∫–∞–≤—ã—á–µ–∫ –≤ data –ù–ï –ù–ê–î–û!!!

    let temp_bomb = ''
    /* —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ–º–± */
    // temp_bomb = matrix[mine.x][mine.y].mineNear
    // if(matrix[mine.x][mine.y].mineHere) temp_bomb = 88;

    //let block = `<div class="block" data=${mineJSON} "><div>${temp_bomb}</div></div>`;
    let block = `<div class=${razm} data=${mineJSON} ><div>${temp_bomb}</div></div>`;

    init = init + block;
  }

  /*—Ñ–æ—Ä–º–∏—Ä—É—é HTML*/
  document.querySelector('.playboard').innerHTML = init;
}

start()

/* –ø–æ–ª—É—á–∞—é Node –∫–æ–ª–ª–µ–∫—Ü–∏—é –±–ª–æ–∫–æ–≤ */
let matrixDoc = document.querySelectorAll('.block')



/****************************************************** */

/* –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–æ–π –∫–ª–∞–≤–∏—à–∏ */

document.querySelector('.playboard').addEventListener('contextmenu', function(event) {
    event.preventDefault()
    // matrixDoc[1].innerHTML = '–£—Ä–∞'
    //console.log(event.target.getAttribute("data"))
    let coorXY = JSON.parse(event.target.getAttribute("data"))

    if(event.target.matches('.block') && matrix[coorXY.x][coorXY.y].mineOpen !== true) {
      event.target.classList.toggle('guess')
    }

  })

/***************************************************** */
/************************************************************************************** */
/*  –û—Ç–∫—Ä—ã—Ç–∏–µ —è—á–µ–π–∫–∏ */

const open = function(event){  // –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–ª–∏–∫–µ
  let coorXY = JSON.parse(event.target.getAttribute("data"))
  let x = coorXY.x
  let y = coorXY.y
  console.log(`—Ñ—É–Ω–∫—Ü–∏—è open x=${x}`)

  openNullBlock(x, y)
}

const openNullBlock = function(x, y){ // –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—è open –≤ –∫–æ—Ç–æ—Ä—É—é —è –≤—Å—Ç–∞–≤–ª—é —ç—Ç—É
  //matrixDoc = document.querySelectorAll('.block')
  let index = y*row + x
  if(matrix[x][y].mineOpen) return; //–µ—Å–ª–∏ —è—á–µ–π–∫–∞ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞ - –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
  if(matrix[x][y].mineHere) {
    temp_bomb = 'üí•';
    matrixDoc[index].innerHTML = `${temp_bomb}`

    /* —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∑—Ä—ã–≤) */
    setTimeout(() => alert('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'),0);
    /* –ü–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª –≥–¥–µ –æ—à–∏–±–∫–∞ –∏ –ø–æ—á–µ–º—É –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏*/
    // minePlacement()
    // mineAround()
    // start()

  } else { // –µ—Å–ª–∏ –º–∏–Ω—ã –Ω–µ—Ç
      let temp_bomb = ''
      temp_bomb = matrix[x][y].mineNear
      if(temp_bomb === 0) temp_bomb = '';
      matrix[x][y].mineOpen = true
      matrixDoc[index].innerHTML = `${temp_bomb}`
      matrixDoc[index].classList.add('null') // Node –∫–æ–ª–ª–µ–∫—Ü–∏—è –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤ (—Å—Ç–æ—è—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É)

      if(temp_bomb) matrixDoc[index].classList.add(`${colorNumber[Number(temp_bomb)-1]}`); // –º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç —Ü–∏—Ñ—Ä

      scoreCloseBlock = scoreCloseBlock - 1 // —Å—á–∏—Ç–∞—é, —Å–∫–æ–ª—å–∫–æ —è—á–µ–µ–∫ –æ—Å—Ç–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å

      if(scoreCloseBlock === 0) alert('–£—Ä–∞! –í—ã –Ω–∞—à–ª–∏ –≤—Å–µ –º–∏–Ω—ã. –ü–æ–±–µ–¥–∞');

      //if(matrix[x][y].mineNear === 0){ // –æ–ø—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫

        if (matrix[x][y].mineNear == 0) { // –æ–ø—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—É—Å—Ç—ã—Ö —è—á–µ–µ–∫
          for (let i = x - 1; i <= x + 1; i++) {
            for (let j = y - 1; j <= y + 1; j++) {
              if (i >= 0 && j >= 0 && i <matrix.length && j < matrix[x].length && (i !== x || j !== y)) {
                openNullBlock(i, j);
              }
            }
          }
        }

  }

}


document.querySelector('.playboard').addEventListener('click', function(event) {
  if(event.target.matches('.block') && !(event.target.matches('.guess'))) {
    open(event)
  }
})


/********************************************************* */


/* –ø–æ–ª—É—á–∞—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è—á–µ–π–∫–∏ –ø–æ –∫–ª–∏–∫—É */
/*
document.querySelectorAll('.block').forEach(function(block){
  block.addEventListener('click', function(){
    //alert(` x=${block.dataset.x}\n y=${block.dataset.y}`) // —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—ã–≤–æ–¥–∏—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è—á–µ–π–∫–∏ 
    //console.log(typeof block.getAttribute("data"))
    console.log(JSON.parse(block.getAttribute("data")))
    let coordinate = JSON.parse(block.getAttribute("data"))
    // console.log(` x=${coordinate.x}\n y=${coordinate.y}`)
    // console.log(` x=${coordinate.x}\n y=${coordinate.y}\n mineHere=${coordinate.mineHere}`)
    // console.log(` x=${coordinate.x}\n y=${coordinate.y}\n mineHere=${coordinate.mineHere}\n mineNear=${coordinate.mineNear}`)
    console.log(` x=${coordinate.x}\n y=${coordinate.y}\n mineHere=${coordinate.mineHere}\n mineNear=${coordinate.mineNear}\n mineOpen=${coordinate.mineOpen}`)

    /* —Ç–µ—Å—Ç–æ–≤–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±–æ–º–± */
    /*
    let temp_bomb = ''
    temp_bomb = matrix[coordinate.x][coordinate.y].mineNear
    if(matrix[coordinate.x][coordinate.y].mineHere) temp_bomb = 'üí•';
    */

    // üí• —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ –≤–∑—Ä—ã–≤ HTML-–∫–æ–¥	&#128165; CSS-–∫–æ–¥	\1F4A5
    // –Ω–µ–∑–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥ &#9872; (\2690) –≤ CSS
    // –∑–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥ &#9873; (\2691) –≤ CSS
    // —à–ª–µ–º —Å –±–µ–ª—ã–º –∫—Ä–µ—Å—Ç–æ–º &#9937;
    // –∑–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —É–ª—ã–±–∞—é—â–∏–π—Å—è —Å–º–∞–π–ª–∏–∫ &#9787;
    // –ø—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –∫—Ä–µ—Å—Ç &#9766;
    // –∫—Ä–µ—Å—Ç ‚úù
    // –Ω–∞—Ö–º—É—Ä–µ–Ω–Ω—ã–π —Å–º–∞–π–ª–∏–∫ &#9785;

    // –º–Ω–æ–≥–æ—É–≥–æ–ª—å–Ω–∏–∫	&#10040;	&#x2738;	‚ú∏

    //‚õî	 	&#9940;	–í—Ö–æ–¥ –∑–∞–ø—Ä–µ—â–µ–Ω (–∫–∏—Ä–ø–∏—á)
    //‚õ≥	 	&#9971;	–§–ª–∞–≥ –≤ –≤–æ—Ä–æ–Ω–∫–µ, –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ, –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏, –≥–æ–ª—å—Ñ

    // ‚õë	&#9937;	\26D1	–®–ª–µ–º —Å –±–µ–ª—ã–º –∫—Ä–µ—Å—Ç–æ–º
    // ‚öë	&#9873;	\2691	–ó–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥
    // ‚öê	&#9872;	\2690	–ù–µ–∑–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥
    // ‚òπ	&#9785;	\2639	–ù–∞—Ö–º—É—Ä–µ–Ω–Ω—ã–π —Å–º–∞–π–ª–∏–∫
    // ‚ò∫	&#9786;	\263A	–£–ª—ã–±–∞—é—â–∏–π—Å—è —Å–º–∞–π–ª–∏–∫
    // ‚òª	&#9787;	\263B	–ó–∞–∫—Ä–∞—à–µ–Ω–Ω—ã–π —É–ª—ã–±–∞—é—â–∏–π—Å—è —Å–º–∞–π–ª–∏–∫

    /* –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –æ—Ç–∫—Ä—ã—Ç–æ–π —è—á–µ–π–∫–æ–π */
    /*
    matrixDoc[coordinate.y*row + coordinate.x].innerHTML = `${temp_bomb}`
    matrixDoc[coordinate.y*row + coordinate.x].classList.add('open')
    */
    /**************************************** */

    //if(!matrix[coordinate.x][coordinate.y].mineNear) –µ—Å–ª–∏ —Ä—è–¥–æ–º –º–∏–Ω –Ω–µ—Ç

    /**************************************** */
    // –∑–∞–ø–æ–º–∏–Ω–∞—é –≤ –º–∞—Ç—Ä–∏—Ü—É, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è—á–µ–π–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä—ã–≤–∞–ª–∞—Å—å
    //matrix[coordinate.x][coordinate.y].mineOpen = true
    //console.log(matrix)
    /*
  })
})
*/

//let matrixDoc = document.querySelectorAll('.block')
//console.log(matrixDoc[1].innerHTML = '–£—Ä–∞')
//console.log(document.querySelectorAll('.block')[99].innerHTML = '–£—Ä–∞')


